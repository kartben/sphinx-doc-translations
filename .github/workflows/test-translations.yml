name: Test translations

on:
  workflow_dispatch:
  pull_request:
    paths:
    - '**.po'
    branches:
    - master
  push:
    paths:
    - '**.po'
    branches:
    - master

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.languages.outputs.languages }}

    steps:
    - name: Grab the repo src
      uses: actions/checkout@v4

    - name: List languages
      id: languages
      working-directory: locale
      run: |
        list=$(find * -maxdepth 0 -type d | sed '/pot/d' | jq -nRc '[inputs]')
        echo "languages=$list" >> $GITHUB_OUTPUT


  test-translation:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        language: ${{fromJson(needs.matrix.outputs.languages)}}

    steps:
    - name: Grab the repo src
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3'
        cache: 'pip'

    - name: Update submodule
      run: |
        git submodule init
        git submodule update
        
    - name: Install dependencies
      run: |
        pip install -U -r requirements.txt
      
    - name: Set Sphinx problem matcher
      uses: sphinx-doc/github-problem-matcher@v1.0

    - name: Build translated docs in ${{ matrix.language }}
      run: |
        sphinx-build ./sphinx/doc/ ./_build/html -b html -D locale_dirs=$(realpath locale) -D language=${{ matrix.language }} -D gettext_compact=0

    - name: Set Sphinx Lint problem matcher
      if: always()
      uses: rffontenelle/sphinx-lint-problem-matcher@v1.0.0

    - name: Lint translation file
      if: always()
      run: sphinx-lint locale/${{ matrix.language }}
